USERS
One-to-Many (2x)
User.hasMany(models.Spot,               { foreignKey: 'ownerId' })
User.hasMany(models.Review,             { foreignKey: 'userId' })

Many-to-Many
User.belongsToMany(models.Spot,         { through: models.Booking })

SPOTS
One-to-Many (2x)
Spot.belongsTo(models.User,             { foreignKey: 'ownerId' })
Spot.hasMany(models.SpotImage,          { foreignKey: 'spotId' })
Spot.hasMany(models.Review,             { foreignKey: 'spotId' })

Many-to-Many
Spot.belongsToMany(models.User,         { through: models.Booking })

SPOT IMAGES
One-to-Many
SpotImages.belongsTo(models.Spot,       { foreignKey: 'spotId' })

REVIEWS
One-to-One (3x)
Review.belongsTo(models.User,           { foreignKey: 'userId })
Review.belongsTo(models.Spot,           { foreignKey: 'spotId' })
Review.hasMany(models.ReviewImage,      { foreignKey: 'reviewId' })

REVIEW IMAGES
One-to-Many
ReviewImages.belongsTo(models.Review,   { foreignKey: 'reviewId' })

BOOKINGS
One-to-Many (2x)
Booking.belongsTo(models.User,          { foreignKey: 'userId' })
Booking.belongsTo(models.Spot,          { foreignKey: 'spotId' })
